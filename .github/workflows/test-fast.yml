name: test-fast

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  build-ubuntu:
    name: Build and test ${{ matrix.buildtype }} on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [g++-7, g++-10]
        buildtype: [Debug]
    steps:
      - name: bootstrap
        run: sudo apt install ${{ matrix.compiler }} valgrind cppcheck clang-tidy

      - name: checkout
        uses: actions/checkout@v2

      - name: build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }}
          cmake --build .

      - name: test
        run: ctest
        working-directory: build

  build-mac:
    name: Build and test ${{ matrix.buildtype }} on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        compiler: [clang++]
        buildtype: [Release]
        include:
          - os: macos-latest
            compiler: clang++
            cxx: clang++
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }}
          cmake --build .

      - name: test
        run: ctest
        working-directory: build

  build-win:
    name: Build and test ${{ matrix.buildtype }} on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        compiler: [VS2019]
        buildtype: [Debug]
        include:
          - os: windows-latest
            compiler: VS2019
            generator: Visual Studio 16 2019
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: build
        run: |
          mkdir build
          cd build
          cmake .. -G "${{ matrix.generator }}" -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }}
          cmake --build . --config ${{ matrix.buildtype }}
        shell: cmd

      - name: test
        run: cmake --build . --target RUN_TESTS --config ${{ matrix.buildtype }}
        working-directory: build
        shell: cmd


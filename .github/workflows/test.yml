name: test

on:
  push:
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  build-ubuntu:
    name: Build and test on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [g++-10]
    steps:
      - name: bootstrap
        run: sudo apt install ${{ matrix.compiler }} valgrind cppcheck

      - name: checkout
        uses: actions/checkout@v2

      - name: build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
          cmake --build .

      - name: test
        run: ctest
        working-directory: build

  build-mac:
    name: Build and test on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        compiler: [g++-10, clang]
        include:
          - os: macos-latest
            compiler: g++-10
            package: gcc@10
          - os: macos-latest
            compiler: clang
            package: llvm
    steps:
      - name: bootstrap
        run: brew install ${{ matrix.package }}

      - name: checkout
        uses: actions/checkout@v2

      - name: build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
          cmake --build .

      - name: test
        run: ctest
        working-directory: build

